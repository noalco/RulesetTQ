<DocumentElement xmlns="http://tempuri.org/Ruleset.xsd">
  <Scripts>
    <ScriptName>ParseoVentDesv</ScriptName>
    <FolderID>14</FolderID>
    <Script>sPorEtnia="";
sLinkPorEtnia="";
sPorProfesion="";
sLinkPorProfesion="";
PorEleccion={
	[1]={sNombre="", sLink="", PP=0, Cant=1},
	[2]={sNombre="", sLink="", PP=0, Cant=1},
	[3]={sNombre="", sLink="", PP=0, Cant=1},
	[4]={sNombre="", sLink="", PP=0, Cant=1},
}

function ResetarVentDesv()
	sPorEtnia="";
	sLinkPorEtnia="";
	sPorProfesion="";
	sLinkPorProfesion="";
	PorEleccion={
		[1]={sNombre="", sLink="", PP=0, Cant=1},
		[2]={sNombre="", sLink="", PP=0, Cant=1},
		[3]={sNombre="", sLink="", PP=0, Cant=1},
		[4]={sNombre="", sLink="", PP=0, Cant=1},
	}
end

function BuscarLink(sVentDesv)
	local sVentDesvNodo;
	-- Búsqueda en local
	if sVentDesv and sVentDesv~="" then
		sVentDesv=sVentDesv:lower();
		sVentDesv=sVentDesv:gsub("%.", "");
		if DB.getChild(".referencia.ventdesvent") then
			for _,nodoVentDesv in pairs(DB.getChild(".referencia.ventdesvent").getChildren()) do
				--Debug.chat(DB.getValue(nodoVentDesv, "name", ""):lower(), sVentDesv:lower())
				sVentDesvNodo=DB.getValue(nodoVentDesv, "name", ""):lower();
				sVentDesvNodo=sVentDesvNodo:gsub(" %(.*%)", "");
				if sVentDesvNodo==sVentDesv then return DB.getPath(nodoVentDesv); end
			end
		end

		-- Búsqueda en módulos
		for sModulo,rModulo in pairs(ModuleManager.getAllModuleInfo()) do
			if rModulo.loaded and DB.getChild(".referencia.ventdesvent@"..sModulo) then
				for _,nodoVentDesv in pairs(DB.getChild(".referencia.ventdesvent@"..sModulo).getChildren()) do
					sVentDesvNodo=DB.getValue(nodoVentDesv, "name", ""):lower();
					sVentDesvNodo=sVentDesvNodo:gsub(" %(.*%)", "");
					if sVentDesvNodo==sVentDesv then return DB.getPath(nodoVentDesv); end
				end
			end;
		end
	end
	return "";
end

function AsignarVentDesvPorEtnia(wPrincipal, sVentDesv)
	wPrincipal.SubventanaWizardPP.subwindow.NombreVentajaEtnia.setValue("");
	if sVentDesv and sVentDesv~="" then
		if sVentDesv:lower():match("estatus material un grado superior al de su profesión") then
			ParseoProfesiones.nIncremento=1;
			sPorEtnia="";
			sLinkPorEtnia="";
		else
			ParseoProfesiones.nIncremento=0;
			sPorEtnia=sVentDesv;
			sLinkPorEtnia=BuscarLink(sVentDesv);
		end
	else
		ParseoProfesiones.nIncremento=0;
		sPorEtnia="";
		sLinkPorEtnia="";
	end
	wPrincipal.SubventanaWizardPP.subwindow.NombreVentajaEtnia.setValue(sPorEtnia);
end

function AsignarVentDesvPorProfesion(wPrincipal, sVentDesv)
	wPrincipal.SubventanaWizardPP.subwindow.NombreVentajaProfesion.setValue("");
	sPorProfesion=sVentDesv;
	sLinkPorProfesion=BuscarLink(sVentDesv);
	wPrincipal.SubventanaWizardPP.subwindow.NombreVentajaProfesion.setValue(sPorProfesion);
end

function esGrupo(sHabilidad)
	sHabilidad=string.lower(sHabilidad);
	if string.match(sHabilidad, "armas cc")==nil and string.match(sHabilidad,"armas pr")==nil and string.match(sHabilidad,"armas ar")==nil and string.match(sHabilidad,"artesanías")==nil and string.match(sHabilidad,"idiomas")==nil and string.match(sHabilidad,"magia")==nil then
		return false;
	else
		return true;
	end
end

function ParsearHabilidades(sHabilidades)
	local aHabilidades = {};
	sHabilidades=sHabilidades:gsub("\n", " ");
	sHabilidades=sHabilidades:gsub("  ", " ");
	local aClauses,_ = StringManager.split(sHabilidades, ",;\.\r\n", true);
	
	for i = 1, #aClauses do
		local sHabilidad, sValor = string.match(aClauses[i], "([%a%s:ñÑáÁéÉíÍóÓúÚ]+)([%+%-–]?%d*)");
		if string.sub(sHabilidad, sHabilidad:len(), sHabilidad:len())==" " then sHabilidad=string.match(sHabilidad, "([%a%s:ñÑáÁéÉíÍóÓúÚ]+)[%s*]"); end

		if sHabilidad and sValor then
			table.insert(aHabilidades, {sHabilidad=sHabilidad, nValor=tonumber(sValor)});
		end
	end
	return aHabilidades;
end

function ModificarHabilidades(sRecord, sTipo, bAniadir)
	if sRecord and sRecord~="" then
		local nAniadir=1;
		if not bAniadir then nAniadir=-1; end
		
		local aHabilidades = ParsearHabilidades(Utilidades.LeerValorRegistro(sRecord, "ModificadoresHabilidades"));
		for i = 1, #aHabilidades do
			local sAux=string.lower(aHabilidades[i].sHabilidad);
			if ParseoHabilidades.Habilidad2Clave[sAux] and ParseoHabilidades.DatosHabilidades[ParseoHabilidades.Habilidad2Clave[sAux]] and ParseoHabilidades.DatosHabilidades[ParseoHabilidades.Habilidad2Clave[sAux]][sTipo] then
				ParseoHabilidades.DatosHabilidades[ParseoHabilidades.Habilidad2Clave[sAux]][sTipo]=ParseoHabilidades.DatosHabilidades[ParseoHabilidades.Habilidad2Clave[sAux]][sTipo]+aHabilidades[i].nValor*nAniadir;
			elseif esGrupo(aHabilidades[i].sHabilidad) then
				ParseoHabilidades.GruposHabilidades[aHabilidades[i].sHabilidad:lower()]=ParseoHabilidades.GruposHabilidades[aHabilidades[i].sHabilidad:lower()]+aHabilidades[i].nValor*nAniadir;
			elseif ParseoHabilidades.esSecundaria(aHabilidades[i].sHabilidad) then
				ParseoHabilidades.ModificarHabilidadSecundaria(aHabilidades[i].sHabilidad, aHabilidades[i].nValor, sTipo, bAniadir);
			else
				Debug.chat("ParseoVentDesv.ModificarHabilidades. Habilidad", aHabilidades[i]);
			end
		end
	end
end

function ModificarBaseDeHabilidades(sRecord, bAniadir)
	if sRecord and sRecord~="" then
		local nAniadir=1;
		if not bAniadir then nAniadir=-1; end
		local aHabilidades = ParsearHabilidades(Utilidades.LeerValorRegistro(sRecord, "ModificadoresBasesHabilidades"));
		for i = 1, #aHabilidades do
			local sAux=string.lower(aHabilidades[i].sHabilidad);
			if ParseoHabilidades.BaseHabilidades[sAux] then
				ParseoHabilidades.BaseHabilidades[sAux]=ParseoHabilidades.BaseHabilidades[sAux]+aHabilidades[i].nValor*nAniadir;
			else
				Debug.chat("ParseoVentDesv.ModificarBaseDeHabilidades. Base Habilidad", aHabilidades[i]);
			end
		end
	end	
end</Script>
    <RegisterScript>true</RegisterScript>
    <Encoding />
  </Scripts>
</DocumentElement>